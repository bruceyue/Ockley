<!--
Ockley 1.0
Copyright 2011,  Matthew Page
licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
-->
<div>
    <span id="toolbar" class="ui-widget-header ui-corner-all" >
        <button id="save">Save</button>
        <button id="saveAll">Save All</button>
        <button id="undo">Undo</button>
        <button id="redo">Redo</button>
    </span>
</div>
<div id="sidebar" class="ui-widget ui-widget-content ui-corner-all">
    <div id="accordion">
	    <h3 id="apexHeader"><a href="#">Apex</a></h3>
        <div id="apexContent">
            <p>loading...</p>
        </div>
        <h3 id="vfHeader"><a href="#">Visualforce</a></h3>
        <div id="vfContent">
            <p>loading...</p>
        </div>
    </div>
</div>
        
<div id="tabs">
    <ul>
		<li><a href="#tabs-new">+</a></li>
	</ul>
	<div id="tabs-new">
	</div>
</div>

<div id='messageDialog' style='display:none'>
    <p></p>
</div>

<script>

    function getDocList(url, type, callback){
        if (url && type){
            $.getJSON(url, function(data) {
                var docs = [];
                $.each(data, function(index, doc){
                   if (doc['sf:type'].text == type){
                       docs.push({ id: doc['sf:id'].text, name: doc['sf:name'].text });
                   }
                });
                if ($.isFunction(callback)){
                    callback.call(this, docs);
                }
            });
        }
    }

    jQuery(function(){
        log('editor page loaded...');

        var $t = $("#tabs");
        var tabs = new EditorTabs( $t );
        tabs.createNew();

        var $s =  $("#sidebar");
        //var $tbar = $("#toolbar");

        $t.resizable({
            helper: "ui-resizable-helper",
            stop: function(event, ui) {
                tabs.refresh(true);
            }
        });

        $s.height($t.outerHeight());

        var messageDialog = $('#messageDialog').dialog({
                                    autoOpen: false,
                                    resizable: false,
                                    closeText: ''
                                  });

        //remove title bar from showDialog
        messageDialog.prev(".ui-dialog-titlebar").hide();

        var accordion = new DocAccordion("#accordion", {
            documentClicked: function(headerTitle, link){

                var docId = link.attr('id');

                //if it's already open, just activate the tab
                var existing = tabs.findByData('docId', docId);
                if (existing.size() > 0){
                    tabs.setSelected(existing[0]);
                    return;
                }

                var url = null;
                var contentKey = null;
                var editMode = 'apex';

                if (headerTitle === "Apex"){
                    url = '/apex/'+ docId+'.json';
                    contentKey = 'sf:body';
                }
                else if (headerTitle === "Visualforce"){
                    url = '/vf/'+ docId+'.json';
                    contentKey = 'sf:markup';
                    editMode = 'text/html';
                }

                if (url && contentKey){
                    //fetch the document and open it in a new tab
                    $.getJSON(url, function(data) {
                        //log(JSON.stringify(data));
                        if (data.length > 0){
                            var content = data[0][contentKey].text;
                            if (content){
                                tabs.createNew({
                                    title: link.text(),
                                    text: content,
                                    data: { 'docId': docId, 'headerTitle': headerTitle },
                                    'mode': editMode
                                });
                            }
                        }

                    });
                }
            }
        });

        getDocList('/apex.json', 'ApexClass', function(docs){
            accordion.appendDocuments("Apex", docs);
        });
        getDocList('/vf.json', 'ApexPage',function(docs){
            accordion.appendDocuments("Visualforce", docs);
        });

        //setup toolbar buttons
        
        $( "#save" ).button({
			text: false,
			icons: {
				primary: "silk-icon-save"
			}
		}).click(function(){

            var tabId = tabs.getSelected();
            var docId = tabs.getData(tabId, 'docId');
            var headerTitle = tabs.getData(tabId, 'headerTitle');
            var editor = tabs.getEditor(tabId);
            var content = editor.getValue();
            var url = null;
            var action = "Compiling...";

            if (headerTitle === "Apex"){
                url = '/apex/'+ docId+'.json';
            }
            else if (headerTitle === "Visualforce"){
                url = '/vf/'+ docId+'.json';
                action = "Saving...";
            }

            if (url != null){
                messageDialog.find('p').text(action);
                messageDialog.dialog('open');
                messageDialog.dialog( "option", "buttons", {} );
                
                $.post(url, { 'content': content }, function(data) {
                    log('Compile/Save result: ');
                    log(data);
                    var msg = 'Failed to receive result from request';
                    if (data && data.length > 0){
                        data = data[0];
                        if (data.success){
                            if (data.success.text === 'true'){
                                //success
                                messageDialog.dialog('close');
                                return;
                            }
                            else if (data.success.text === 'false'){
                                //fail
                                if (data.problem){
                                    msg = data.problem.text;
                                }
                                if (data.errors && data.errors.message){
                                    msg = data.errors.message.text;
                                }
                                if (data.line){
                                    msg += ' line: ' + data.line.text;
                                }
                                if (data.column){
                                    msg += ' column: ' + data.column.text;
                                }
                            }
                        }
                    }
                    messageDialog.find('p').text(msg);
                    messageDialog.dialog( "option", "buttons", { "Ok": function() { $(this).dialog("close"); } } );
                });
            }

        });
        $( "#saveAll" ).button({
			text: false,
			icons: {
				primary: "silk-icon-saveall"
			}
		});
        $( "#undo" ).button({
			text: false,
			icons: {
				primary: "silk-icon-undo"
			}
		});
		$( "#redo" ).button({
			text: false,
			icons: {
				primary: "silk-icon-redo"
			}
		});
    });
</script>        